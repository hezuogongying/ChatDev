下面是一个用Python编写的简单的五子棋游戏程序，你可以参考并运行它：

```python
import numpy as np

# 初始化棋盘
def init_board():
    board = np.zeros((15, 15), dtype=int)
    return board

# 判断落子是否合法
def is_valid_move(board, row, col):
    return board[row, col] == 0

# 在棋盘上落子
def make_move(board, row, col, player):
    board[row, col] = player

# 判断游戏是否结束
def is_game_over(board, player):
    # 横向
    for i in range(15):
        for j in range(11):
            if board[i, j:j+5].sum() == 5*player:
                return True
    # 纵向
    for i in range(11):
        for j in range(15):
            if board[i:i+5, j].sum() == 5*player:
                return True
    # 左上到右下
    for i in range(11):
        for j in range(11):
            if board[i:i+5, j:j+5].diagonal().sum() == 5*player:
                return True
    # 右上到左下
    for i in range(11):
        for j in range(11):
            if np.fliplr(board[i:i+5, j:j+5]).diagonal().sum() == 5*player:
                return True
    return False

# 打印棋盘
def print_board(board):
    for row in board:
        print(' '.join(map(lambda x: '○' if x == 1 else '●' if x == 2 else '・', row)))

# 主程序
def main():
    board = init_board()
    print_board(board)
    player = 1
    while True:
        try:
            move = input('玩家{}输入落子位置，格式为 row,col：'.format(player))
            row, col = map(int, move.split(','))
            if is_valid_move(board, row, col):
                make_move(board, row, col, player)
                print_board(board)
                if is_game_over(board, player):
                    print('玩家{}获胜！'.format(player))
                    break
                player = 3 - player
            else:
                print('落子不合法，请重新输入。')
        except Exception as e:
            print('输入格式错误，请重新输入。')

if __name__ == '__main__':
    main()
```

这个程序实现了一个简单的五子棋游戏，玩家可以通过输入行和列的方式在控制台上落子，程序会自动判断胜负并打印出棋盘。